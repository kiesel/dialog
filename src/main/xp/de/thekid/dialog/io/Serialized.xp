package de.thekid.dialog.io;

import native standard.strpos;
import native standard.substr;
import native standard.substr_compare;
import native core.strlen;

public class Serialized {
  private string $bytes;
  private string $offset;

  public __construct(string $bytes) {
    $this.bytes= $bytes;
    $this.offset= 0;
  }

  public string bytes() -> $this.bytes;

  public self append(string $bytes) {
    $this.bytes ~= $bytes;
    return $this;
  }

  public void forward() {
    $this.offset++;
  }

  public string consumeToken() {
    $token= $this.bytes[$this.offset];
    $this.offset += 2;
    return $token;
  }

  public string consumeWord() {
    $word= substr($this.bytes, $this.offset, strpos($this.bytes, ';', $this.offset) - $this.offset);
    $this.offset += strlen($word) + 1;  // +1 to set the marker behind
    return $word;
  }

  public int consumeSize() {
    $size= substr($this.bytes, $this.offset, strpos($this.bytes, ':', $this.offset) - $this.offset);
    $this.offset += strlen($size)+ 1;   // +1 to set the marker behind
    return $size as int;
  }

  public string consumeString() {
    $size= substr($this.bytes, $this.offset, strpos($this.bytes, ':', $this.offset) - $this.offset);
    $b= strlen($size) + 2;              // 1 for ':', 1 for '"'
    $value= substr($this.bytes, $this.offset + $b, $size);
    $this.offset += $b + $size + 2;     // 1 for '"', +1 to set the marker behind
    return $value;
  }

  public string toString() -> nameof($this) ~ '<' ~ $this.bytes ~ '>';
}
