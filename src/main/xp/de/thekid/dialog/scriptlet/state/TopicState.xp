package de.thekid.dialog.scriptlet.state;

import de.thekid.dialog.scriptlet.AbstractDialogState;
import de.thekid.dialog.scriptlet.NodeHandler;
import de.thekid.dialog.Topic;
import xml.Node;
import xml.PCData;

import native standard.krsort;

/**
 * Handles /xml/topic
 *
 */
public class TopicState extends AbstractDialogState {
  protected static [:NodeHandler] $nodeHandlers = [:];

  static {
    self::$nodeHandlers['de.thekid.dialog.Album']= new NodeHandler() {
      public xml.Node nodeFor(de.thekid.dialog.Album? $album, [:NodeHandler]? $nodeHandlers) {
        $child= new Node('entry', null, [
          'name'          : $album.getName(),
          'title'         : $album.getTitle(),
          'num_images'    : $album.numImages(),
          'num_chapters'  : $album.numChapters()
        ]);
        $child.addChild(Node::fromObject($album.createdAt, 'created'));
        $child.addChild(new Node('description', new PCData($album.getDescription())));
        return $child;
      }
    };
    self::$nodeHandlers['de.thekid.dialog.Update']= new NodeHandler() {
      public xml.Node nodeFor(de.thekid.dialog.Update? $update, [:NodeHandler]? $nodeHandlers) {
        $child= new Node('entry', null, [
          'album'         : $update.getAlbumName(),
          'title'         : $update.getTitle()
        ]);
        $child.addChild(Node::fromObject($update.date, 'created'));
        $child.addChild(new Node('description', new PCData($update.getDescription())));
        return $child;
      }
    };
    self::$nodeHandlers['de.thekid.dialog.SingleShot']= new NodeHandler() {
      public xml.Node nodeFor(de.thekid.dialog.SingleShot? $shot, [:NodeHandler]? $nodeHandlers) {
        $child= new Node('entry', null, [
          'name'      : $shot.getName(),
          'title'     : $shot.getTitle()
        ]);
        $child.addChild(Node::fromObject($shot.date, 'created'));
        $child.addChild(new Node('description', new PCData($shot.getDescription())));
        return $child;
      }
    };
    self::$nodeHandlers['de.thekid.dialog.ImageStrip']= new NodeHandler() {
      public xml.Node nodeFor(de.thekid.dialog.ImageStrip? $imageStrip, [:NodeHandler]? $nodeHandlers) {
        $child= new Node('entry', null, [
          'name'          : $imageStrip.getName(),
          'title'         : $imageStrip.getTitle(),
          'num_images'    : $imageStrip.numImages(),
        ]);
        $child.addChild(Node::fromObject($imageStrip.createdAt, 'date'));
        $child.addChild(new Node('description', new PCData($imageStrip.getDescription())));
        return $child;
      }
    };
    self::$nodeHandlers['de.thekid.dialog.EntryCollection']= new NodeHandler() {
      public xml.Node nodeFor(de.thekid.dialog.EntryCollection? $collection, [:NodeHandler]? $nodeHandlers) {
        $node= new Node('entry', null, [
          'name'          : $collection.getName(),
          'title'         : $collection.getTitle(),
          'num_entries'   : $collection.numEntries()
        ]);
        $node.addChild(Node::fromObject($collection.createdAt, 'created'));
        $child.addChild(new Node('description', new PCData($collection.getDescription())));
        return $node;
      }
    };
  }

  /**
   * Process this state.
   *
   */
  public void process(scriptlet.xml.workflow.WorkflowScriptletRequest? $request, scriptlet.xml.XMLScriptletResponse? $response, scriptlet.xml.workflow.Context? $context) {
    $name= $request.getURL().getValue('topic');
    $topic= $this.getEntryFor('topics/' ~ $name) as Topic;

    $t= $response.addFormResult(new Node('topic', null, [
      'name'  : $topic.getName(),
      'title' : $topic.getTitle()
    ]));
    $t.addChild(Node::fromObject($topic.getCreatedAt(), 'created'));

    // Add origins
    $origins= new [:Node]{:};
    foreach ($name in $topic.origins()) {
      $entry= $this.getEntryFor($name);
      if (!isset(self::$nodeHandlers[$entry.getClassName()])) {
        throw new FormatException('Index contains unknown element "' ~ $entry.getClassName() ~ '"');
      }

      if ($child= self::$nodeHandlers[$entry.getClassName()].nodeFor($entry, self::$nodeHandlers)) {
        $y= $entry.getDate().toString('Y');
        if (!isset($origins[$y])) {
          $origins[$y]= new Node('year', null, ['num' : $y]);
        }
        $origins[$y].addChild($child).setAttribute('type', $entry.getClassName());

        foreach ($id, $image in $topic.imagesFrom($name)) {
          $n= $origins[$y].addChild(new Node('image', null, [
            'name'          : $image.getName(),
            'id'            : $id,
            'origin-name'   : $name,
            'origin-class'  : $entry.getClassName()
          ]));

          foreach ($key, $value in $entry.imageUrn($image.getName()) as [:string]?) {
            $n.setAttribute('origin-' ~ $key, $value);
          }
        }
      }
    }
    krsort($origins);
    foreach ($byYear in $origins) {
      $t.addChild($byYear);
    }
  }
}
