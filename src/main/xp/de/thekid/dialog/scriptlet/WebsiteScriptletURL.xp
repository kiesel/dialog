package de.thekid.dialog.scriptlet;
 
import scriptlet.xml.XMLScriptletURL;

import native standard.sscanf;
import native pcre.preg_match;

/**
 * Represents the XML scriptlet URLs
 *
 * @see      xp://scriptlet.xml.XMLScriptlet
 * @purpose  URL representation class
 */
class WebsiteScriptletURL extends XMLScriptletURL {
    
  /**
   * Extract information from URL
   *
   */
  protected void extract() {
    if (1 == sscanf($this.getPath(), '/page/%d', $page)) {
      $this.setStateName('static');
      $this.setValue('index', $page);
      return;
    }
    
    if (preg_match('#/album/([^/]+(/[^/]+)?)/([0-9]+)/([hi]),([0-9]+)$#', $this.getPath(), $parts)) {
      $this.setStateName('image/view');
      $this.setValue('album', $parts[1]);
      $this.setValue('chapter', $parts[3]);
      $this.setValue('type', $parts[4]);
      $this.setValue('index', $parts[5]);
      return;
    }
    
    if (preg_match('#/album/([^/]+(/[^/]+)?)/([0-9]+)$#', $this.getPath(), $parts)) {
      $this.setStateName('chapter/view');
      $this.setValue('album', $parts[1]);
      $this.setValue('chapter', $parts[3]);
      return;
    }
    
    if (preg_match('#/album/([^/]+(/[^/]+)?)$#', $this.getPath(), $parts)) {
      $this.setStateName('album/view');
      $this.setValue('album', $parts[1]);
      return;
    }
    
    if (1 == sscanf($this.getPath(), '/collection/%[^/]', $collection)) {
      $this.setStateName('collection/view');
      $this.setValue('collection', $collection);
      return;
    }
    
    if (2 == sscanf($this.getPath(), '/shot/%[^/]/%d', $shot, $mode)) {
      $this.setStateName('shot/view');
      $this.setValue('shot', $shot);
      $this.setValue('mode', $mode);
      return;
    }

    if ('/about/' == $this.getPath()) {
      $this.setStateName('about');
    if (1 == sscanf($this.getPath(), '/imagestrip/%[^/]', $imagestrip)) {
      $this.setStateName('imagestrip');
      $this.setValue('imagestrip', $imagestrip);
      return;
    }

    if (3 == sscanf($this.getPath(), '/topic/%[^/]/%[^,],%d', $topic, $origin, $index)) {
      $this.setStateName('topic/browse');
      $this.setValue('topic', $topic);
      $this.setValue('origin', $origin);
      $this.setValue('index', $index);
      return;
    }

    if (1 == sscanf($this.getPath(), '/topic/%[^/]', $topic)) {
      $this.setStateName('topic');
      $this.setValue('topic', $topic);
      return;
    }

    if (preg_match('#/by/date(/([0-9]{4}))?$#', $this.getPath(), $parts)) {
      $this.setStateName('bydate');
      $this.setValue('year', isset($parts[2]) ? $parts[2] as int : null);
      return;
    }

    if (preg_match('#/by/topic(/page/([0-9]+))?$#', $this.getPath(), $parts)) {
      $this.setStateName('bytopic');
      $this.setValue('page', isset($parts[2]) ? $parts[2] as int : 0);
      return;
    }
    
    parent::extract();
  }
  
  /**
   * Set value
   *
   */
  protected void setValue(string $key, var $value) {
    $this.values.put('dialog.' ~ $key, $value);
  }

  /**
   * Retrieve stored value
   *
   */
  public var getValue(string $key) {
    return $this.values.get('dialog.' ~ $key);
  }
}
