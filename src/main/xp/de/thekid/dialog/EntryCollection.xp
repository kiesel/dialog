package de.thekid.dialog;

import util.Date;

/**
 * Represents a collection of any IEntry objects
 *
 * @test     xp://de.thekid.dialog.unittest.EntryCollectionTest
 * @see      xp://de.thekid.dialog.IEntry
 */
public class EntryCollection implements IEntry {
  public string $name         = '';
  public string $title        = '';
  public string $description  = '';
  public Date $createdAt      = null;
  public IEntry[] $entries    = [];

  /**
   * Constructor
   */
  public __construct($this.name= null) { }

  /**
   * Name accessors
   */
  public void setName($this.name) { }
  public self withName($this.name) -> $this;
  public string getName() -> $this.name;

  /**
   * Title accessors
   */
  public void setTitle($this.title) { }
  public self withTitle($this.title) -> $this;
  public string getTitle() -> $this.title;

  /**
   * Description accessors
   */
  public void setDescription($this.description) { }
  public self withDescription($this.description) -> $this;
  public string getDescription() -> $this.description;

  /**
   * CreatedAt accessors
   */
  public void setCreatedAt($this.createdAt) { }
  public self withCreatedAt($this.createdAt) -> $this;
  public Date getCreatedAt() -> $this.createdAt;

  /**
   * Get date
   *
   * @see     xp://de.thekid.dialog.IEntry
   */
  public Date getDate() -> $this.createdAt;

  /**
   * Add an element to entries
   *
   * @return  the added entry
   */
  public IEntry addEntry(IEntry $entry) {
    $this.entries[]= $entry;
    return $entry;
  }

  /**
   * Add an element to entries and return this collection
   *
   * @return  the added entry
   */
  public self withEntry(IEntry $entry) {
    $this.entries[]= $entry;
    return $this;
  }

  /**
   * Get one entry element by position. Returns NULL if the element 
   * can not be found.
   *
   */
  public IEntry entryAt(int? $i) {
    if (!isset($this.entries[$i])) return null;
    return $this.entries[$i];
  }

  /**
   * Get number of entries
   *
   */
  public int numEntries() {
    return $this.entries.length;
  }

  /**
   * Find an image
   *
   */
  public var imageUrn(string $name) {
    foreach ($entry in $this.entries) {
      if (null !== ($urn= $entry.imageUrn($name))) return $urn;
    }
    return null;
  }
} 
