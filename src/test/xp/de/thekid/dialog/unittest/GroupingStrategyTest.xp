package de.thekid.dialog.unittest;

import unittest.TestCase;
import unittest.AssertionFailedError;
import unittest.PrerequisitesNotMetError;
import de.thekid.dialog.AlbumImage;
import de.thekid.dialog.GroupingStrategy;
import img.util.ExifData;
import util.Date;

public class GroupingStrategyTest extends TestCase {

  /**
   * Creates a image with a specified date in its EXIF data
   *
   * @param  $date Any date format parseable by util.Date's constructor
   * @return An album image
   */
  private AlbumImage imageTakenAt(string $date) {
    return new AlbumImage($this.name).withExifData(new ExifData().withDateTime(new Date($date)));
  }

  [@test]
  public void group_by_hour() {
    $this.assertEquals('1977-12-14 11', GroupingStrategy::$hour.groupFor($this.imageTakenAt('1977-12-14 11:45:00')));
  }

  [@test]
  public void group_by_day() {
    $this.assertEquals('1977-12-14', GroupingStrategy::$day.groupFor($this.imageTakenAt('1977-12-14 11:45:00')));
  }

  [@test, @expect('lang.IllegalArgumentException'), @values([
    GroupingStrategy::$hour,
    GroupingStrategy::$day
  ])]
  public void raises_exceptions_when_no_exifdata_is_available($grouping) {
    $grouping.groupFor(new AlbumImage($this.name));
  }
}