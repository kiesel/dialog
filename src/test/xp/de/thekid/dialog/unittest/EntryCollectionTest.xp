package de.thekid.dialog.unittest;

import unittest.TestCase;
import de.thekid.dialog.EntryCollection;
import de.thekid.dialog.Album;
import de.thekid.dialog.AlbumImage;
import util.Date;

/**
 * Tests the collection class
 *
 * @see      xp://de.thekid.dialog.EntryCollection
 */
public class EntryCollectionTest extends TestCase {
  protected EntryCollection $fixture;

  /**
   * Sets up this test case
   *
   */
  public void setUp() {
    $this.fixture= new EntryCollection();
  }

  /**
   * Tests name accessors
   *
   */
  [@test]
  public void nameAccessors() {
    $this.fixture.setName('name');
    $this.assertEquals('name', $this.fixture.getName());
  }

  /**
   * Tests title accessors
   *
   */
  [@test]
  public void titleAccessors() {
    $this.fixture.setTitle('Title');
    $this.assertEquals('Title', $this.fixture.getTitle());
  }

  /**
   * Tests description accessors
   *
   */
  [@test]
  public void descriptionAccessors() {
    $this.fixture.setDescription('Description');
    $this.assertEquals('Description', $this.fixture.getDescription());
  }

  /**
   * Tests createdAt accessors
   *
   */
  [@test]
  public void createdAtAccessors() {
    $date= Date::now();
    $this.fixture.setCreatedAt($date);
    $this.assertEquals($date, $this.fixture.getCreatedAt());
  }

  /**
   * Tests getDate() method
   *
   */
  [@test]
  public void getDate() {
    $date= Date::now();
    $this.fixture.setCreatedAt($date);
    $this.assertEquals($date, $this.fixture.getDate());
  }

  /**
   * Tests addEntry() method
   *
   */
  [@test]
  public void addingAnEntryReturnsIt() {
    $album= new Album();
    $this.assertEquals($album, $this.fixture.addEntry($album));
  }

  /**
   * Tests withEntry() method
   *
   */
  [@test]
  public void withEntryReturnsCollection() {
    $this.assertEquals($this.fixture, $this.fixture.withEntry(new Album()));
  }

  /**
   * Tests numEntries() method
   *
   */
  [@test]
  public void noEntriesInitially() {
    $this.assertEquals(0, $this.fixture.numEntries());
  }

  /**
   * Tests numEntries() and addEntry() methods
   *
   */
  [@test]
  public void addingAnEntry() {
    $this.fixture.addEntry(new Album());
    $this.assertEquals(1, $this.fixture.numEntries());
  }

  /**
   * Tests numEntries() and addEntry() methods
   *
   */
  [@test]
  public void addingHighlights() {
    $this.fixture.addEntry(new Album());
    $this.fixture.addEntry(new Album());
    $this.assertEquals(2, $this.fixture.numEntries());
  }

  /**
   * Tests entryAt() method
   *
   */
  [@test]
  public void noEntriesInitiallyAtZero() {
    $this.assertNull($this.fixture.entryAt(0));
  }

  /**
   * Tests entryAt() method
   *
   */
  [@test]
  public void entryAtZero() {
    $album= $this.fixture.addEntry(new Album());
    $this.assertEquals($album, $this.fixture.entryAt(0));
  }

  /**
   * Tests entryAt() method
   *
   */
  [@test]
  public void highlightAtOne() {
    $this.fixture.addEntry(new Album());
    $this.assertNull($this.fixture.entryAt(1));
  }

  /**
   * Tests entryAt() method
   *
   */
  [@test]
  public void entryAtNegativeOne() {
    $this.assertNull($this.fixture.entryAt(-1));
  }

  /**
   * Tests imageUrn() method
   *
   */
  [@test]
  public void highlightUrn() {
    $this.fixture.addEntry(new Album()
      .withHighlight(new AlbumImage('highlight.1'))
      .withHighlight(new AlbumImage('highlight.2'))
      .withHighlight(new AlbumImage('highlight.3'))
      .withHighlight(new AlbumImage('highlight.4'))
    );
    $this.assertEquals(
      ['type' : 'h', 'chapter' : 0, 'id' : 3], 
      $this.fixture.imageUrn('highlight.4')
    );
  }
}
