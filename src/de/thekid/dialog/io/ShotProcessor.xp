/* This class is part of the XP framework
 *
 * $Id$ 
 */

package de.thekid.dialog.io;

import img.Image;
import img.util.ExifData;

import native standard.implode;
import native standard.max;
import native standard.intval;

/**
 * Specialized processor which processes a single shot
 *
 * @see   xp://de.thekid.dialog.io.ImageProcessor
 */
public class ShotProcessor extends ImageProcessor {
  public [:img.convert.ImageConverter] $converter= [:];
  public int[] $detailDimensions = [];

  /**
   * Constructor
   *
   */
  public __construct() {
    $this.converter['grayscale']= new img.convert.GrayscaleConverter();
    $this.detailDimensions = [ 459, 230 ];
  }

  /**
   * Resample a given image to given dimensions.  Will always fit the 
   * image into the given dimensions, cutting where necessary
   *
   * @param   origin
   * @param   dimensions int[2] (0 = X, 1 = Y)
   */
  public Image resampleToFixedCut(Image $origin, int[]? $dimensions) {
    $this.cat && $this.cat.debug('Resampling image to fixed', implode('x', $dimensions));

    with ($resized= Image::create($dimensions[0], $dimensions[1], IMG_TRUECOLOR)) {
      $factor= $origin.getWidth() / $resized.getWidth();
      $cut= max(0, intval(((($origin.getHeight() / $factor) - $dimensions[1]) * $factor) / 2));

      $this.cat && $this.cat.debug('Need to cut', $cut, 'pixels from original');
      $resized.resampleFrom($origin, 0, 0, 0, $cut, -1, -1, -1, $origin.getHeight()- $cut- $cut);
    }

    return $resized;
  }

  /**
   * Helper method to create detail image from origin image.
   *
   */
  public Image detailImageFor(Image $origin, ExifData $exifData) {
    return $this.resampleToFixedCut($origin, $this.detailDimensions);
  }

  /**
   * Helper method to create grayscale from origin image. 
   *
   */
  public Image grayScaleThumbImageFor(Image $origin, ExifData $exifData) {
    $resized= $this.resampleToFixedCut($origin, $this.thumbDimensions);
    $resized.convertTo($this.converter['grayscale']);
    return $resized;
  }

  /**
   * Helper method to create grayscale from origin image ~ 
   *
   */
  public Image grayScaleFullImageFor(Image $origin, ExifData $exifData) {
    $resized= $this.resampleTo($origin, $exifData.isHorizontal(), $this.fullDimensions);
    $resized.convertTo($this.converter['grayscale']);
    return $resized;
  }

  /**
   * Retrieve a list of targets to be transformed
   *
   */
  public ProcessorTarget[] targetsFor(io.File $in) {
    return [
      new ProcessorTarget('detailImageFor', 'detail.' ~ $in.getFilename(), true, false),
      new ProcessorTarget('fullImageFor', 'color.' ~ $in.getFilename(), true, true),
      new ProcessorTarget('grayScaleFullImageFor', 'gray.' ~ $in.getFilename(), true, false),
      new ProcessorTarget('thumbImageFor', 'thumb.color.' ~ $in.getFilename(), false, false),
      new ProcessorTarget('grayScaleThumbImageFor', 'thumb.gray.' ~ $in.getFilename(), false, false)
    ];
  }
}
