/* This class is part of the XP framework
 *
 * $Id: StaticState.class.php 11602 2009-11-01 19:32:48Z friebe $ 
 */

package de.thekid.dialog.scriptlet.state;

import scriptlet.xml.XMLScriptletRequest;
import scriptlet.xml.XMLScriptletResponse;
import scriptlet.xml.workflow.Context;
import xml.Node;
import xml.PCData;

import de.thekid.dialog.IEntry;
import de.thekid.dialog.Album;
import de.thekid.dialog.Update;
import de.thekid.dialog.SingleShot;
import de.thekid.dialog.ImageStrip;
import de.thekid.dialog.EntryCollection;

import native standard.sscanf;

/**
 * Handles /xml/static
 *
 */
public class StaticState extends de.thekid.dialog.scriptlet.AbstractDialogState {
  protected static [:NodeHandler] $nodeHandlers = [:];
  
  static {
    self::$nodeHandlers['de.thekid.dialog.Album']= new NodeHandler() {
      public Node nodeFor(IEntry? $entry, [:NodeHandler]? $nodeHandlers) {
        with ($album= $entry as Album?) {
          $child= new Node('entry', null, [
            name         : $album.getName(),
            title        : $album.getTitle(),
            num_images   : $album.numImages(),
            num_chapters : $album.numChapters()
          ]);
          $child.addChild(new Node('description', new PCData($album.getDescription())));
          $child.addChild(Node::fromObject($album.getCreatedAt(), 'created'));
          $child.addChild(Node::fromArray($album.highlights, 'highlights'));

          return $child;
        }
      }
    };
    self::$nodeHandlers['de.thekid.dialog.Update']= new NodeHandler() {
      public Node nodeFor(IEntry? $entry, [:NodeHandler]? $nodeHandlers) {
        with ($update= $entry as Update?) {
          $child= new Node('entry', null, [
            album : $update.getAlbumName(),
            title : $update.getTitle()
          ]);
          $child.addChild(new Node('description', new PCData($update.getDescription())));
          $child.addChild(Node::fromObject($update.date, 'date'));

          return $child;
        }
      }
    };
    self::$nodeHandlers['de.thekid.dialog.SingleShot']= new NodeHandler() {
      public Node nodeFor(IEntry? $entry, [:NodeHandler]? $nodeHandlers) {
        with ($shot= $entry as SingleShot?) {
          $child= new Node('entry', null, [
            name     : $shot.getName(),
            filename : $shot.getFileName(),
            title    : $shot.getTitle()
          ]);
          $child.addChild(new Node('description', new PCData($shot.getDescription())));
          $child.addChild(Node::fromObject($shot.date, 'date'));

          return $child;
        }
      }
    };
    self::$nodeHandlers['de.thekid.dialog.ImageStrip']= new NodeHandler() {
      public Node nodeFor(IEntry? $entry, [:NodeHandler]? $nodeHandlers) {
        with ($imageStrip= $entry as ImageStrip?) {
          $child= new Node('entry', null, [
            name       : $imageStrip.getName(),
            title      : $imageStrip.getTitle(),
            num_images : $imageStrip.numImages(),
          ]);
          $child.addChild(new Node('description', new PCData($imageStrip.getDescription())));
          $child.addChild(Node::fromObject($imageStrip.createdAt, 'date'));
          $child.addChild(Node::fromArray($imageStrip.images, 'images'));
          return $child;
        }
      }
    };
    self::$nodeHandlers['de.thekid.dialog.EntryCollection']= new NodeHandler() {
      public Node nodeFor(IEntry? $entry, [:NodeHandler]? $nodeHandlers) {
        with ($collection= $entry as EntryCollection?) {
          $numEntries= $collection.numEntries();
          $node= new Node('entry', null, [
            name        : $collection.getName(),
            title       : $collection.getTitle(),
            num_entries : $numEntries
          ]);
          $node.addChild(new Node('description', new PCData($collection.getDescription())));
          $node.addChild(Node::fromObject($collection.createdAt, 'created'));

          for ($i= 0; $i < $numEntries; $i++) {
            $entry= $collection.entryAt($i);
            if (!isset($nodeHandlers[$entry.getClassName()])) {
              throw new FormatException('Collection index contains unknown element "' ~ $entry.getClassName() ~ '"');
            }

            $child= $node.addChild($nodeHandlers[$entry.getClassName()].nodeFor($entry));
            $child.setAttribute('type', $entry.getClassName());
          }

          return $node;
        }
      }
    };
  }

  /**
   * Process this state.
   *
   */
  public void process(XMLScriptletRequest? $request, XMLScriptletResponse? $response, Context? $context) {
    $page= 0;
    sscanf($request.getQueryString(), 'page%d', $page);
    $index= $this.getIndexPage($page);
    
    // Add paging information
    $response.addFormResult(new Node('pager', null, [
      offset  : $page,
      total   : $index['total'],
      perpage : $index['perpage']
    ]));
    
    // Add entries from index
    $node= $response.addFormResult(new Node('entries'));
    foreach ($name in $index['entries'] as string[]?) {
      $entry= $this.getEntryFor($name);
      if (!isset(self::$nodeHandlers[$entry.getClassName()])) {
        throw new FormatException('Index contains unknown element "' ~ $entry.getClassName() ~ '"');
      }

      $child= $node.addChild(self::$nodeHandlers[$entry.getClassName()].nodeFor($entry, self::$nodeHandlers));
      $child.setAttribute('type', $entry.getClassName());
    }
  }
}
